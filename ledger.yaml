AWSTemplateFormatVersion: '2010-09-09'
Description: Create QLDB Ledger

Resources:
  Ledger:
    Type: AWS::QLDB::Ledger
    Properties:
      DeletionProtection: False
      Name: ApiLedger
      PermissionsMode: STANDARD

  LedgerKinesisStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: ApiLedgerStream
      RetentionPeriodHours: 24
      ShardCount: 1
      StreamEncryption:
        EncryptionType: KMS
        KeyId: alias/aws/kinesis

  LedgerStreamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
            - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
              - qldb.amazonaws.com
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - kinesis:DescribeStream
                  - kinesis:ListShards
                  - kinesis:PutRecord*
                Resource: !GetAtt LedgerKinesisStream.Arn
          PolicyName: WriteToKinesis

  LedgerStream:
    Type: AWS::QLDB::Stream
    Properties:
      InclusiveStartTime: '2021-01-01T00:00:00Z'
      KinesisConfiguration:
        AggregationEnabled: True
        StreamArn: !GetAtt LedgerKinesisStream.Arn
      LedgerName: !Ref Ledger
      RoleArn: !GetAtt LedgerStreamRole.Arn
      StreamName: Api

  Topic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: ApiEvents

  Queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ApiEventConsumer

  Subscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt Queue.Arn
      Protocol: sqs
      RawMessageDelivery: True
      TopicArn: !Ref Topic

  QueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref Queue
      PolicyDocument:
        Id: QueuePolicy
        Version: 2012-10-17
        Statement:
          - Action:
              - sqs:SendMessage
            Effect: Allow
            Principal: '*'
            Resource: '*'
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref Topic
